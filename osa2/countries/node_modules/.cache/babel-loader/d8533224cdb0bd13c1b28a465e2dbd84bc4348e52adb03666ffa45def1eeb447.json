{"ast":null,"code":"var _jsxFileName = \"/home/katjaker/FullStack/osa2/countries/src/components/Country.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Country = _ref => {\n  _s();\n  let {\n    country\n  } = _ref;\n  const [weather, setWeather] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [wind, setWind] = useState('');\n  useEffect(() => {\n    axios.get(`http://api.weatherstack.com/current?access_key=${process.env.REACT_APP_API_KEY}&query=${country.capital}`).then(response => {\n      setWeather(response.data.current);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Info, {\n      country: country\n    }, country.name.common, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Languages, {\n      languages: Object.values(country.languages)\n    }, country.name.common, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flags.png,\n      style: {\n        width: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"tempterature \", weather.temperature, \" Celsius\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weather.weather_icons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"wind \", weather.wind_speed, \" m/s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n_s(Country, \"AlUknRKmr4InSnklMco9Qb0fRjs=\");\n_c = Country;\nexport default Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","Country","country","weather","setWeather","useState","temperature","setTemperature","wind","setWind","useEffect","axios","get","process","env","REACT_APP_API_KEY","capital","then","response","data","current","name","common","Object","values","languages","flags","png","width","weather_icons","wind_speed"],"sources":["/home/katjaker/FullStack/osa2/countries/src/components/Country.js"],"sourcesContent":["import React from 'react';\n\nconst Country = ({country}) => {\n\n    const [weather, setWeather] = useState('')\n    const [temperature, setTemperature] = useState('')\n    const [wind, setWind] = useState('')\n  \n    useEffect(() => {\n      axios\n      .get(`http://api.weatherstack.com/current?access_key=${process.env.REACT_APP_API_KEY}&query=${country.capital}`)\n      .then(response => {\n        setWeather(response.data.current)\n      })\n    }, [])\n  \n    return (\n      <div>\n        <Info key={country.name.common} country={country}/>\n        <Languages key={country.name.common} languages={Object.values(country.languages)}/>\n        <img src={country.flags.png} style={{ width: '50%' }}></img>\n        <h3>Weather in {country.capital}</h3>\n        <p>tempterature {weather.temperature} Celsius</p>\n        <img src={weather.weather_icons}></img>\n        <p>wind {weather.wind_speed} m/s</p>\n      </div>\n    )\n  }\n\n  export default Country;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,OAAO,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAO,CAAC;EAEtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpCK,SAAS,CAAC,MAAM;IACdC,KAAK,CACJC,GAAG,CAAE,kDAAiDC,OAAO,CAACC,GAAG,CAACC,iBAAkB,UAASb,OAAO,CAACc,OAAQ,EAAC,CAAC,CAC/GC,IAAI,CAACC,QAAQ,IAAI;MAChBd,UAAU,CAACc,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE,QAAC,IAAI;MAA2B,OAAO,EAAElB;IAAQ,GAAtCA,OAAO,CAACmB,IAAI,CAACC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAqB,eACnD,QAAC,SAAS;MAA2B,SAAS,EAAEC,MAAM,CAACC,MAAM,CAACtB,OAAO,CAACuB,SAAS;IAAE,GAAjEvB,OAAO,CAACmB,IAAI,CAACC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAgD,eACnF;MAAK,GAAG,EAAEpB,OAAO,CAACwB,KAAK,CAACC,GAAI;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5D;MAAA,0BAAgB1B,OAAO,CAACc,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACrC;MAAA,4BAAiBb,OAAO,CAACG,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACjD;MAAK,GAAG,EAAEH,OAAO,CAAC0B;IAAc;MAAA;MAAA;MAAA;IAAA,QAAO,eACvC;MAAA,oBAAS1B,OAAO,CAAC2B,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV,CAAC;AAAA,GAzBG7B,OAAO;AAAA,KAAPA,OAAO;AA2BX,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}