{"ast":null,"code":"var _jsxFileName = \"/home/katjaker/FullStack/osa2/countries/src/components/Country.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Country = _ref => {\n  _s();\n  let {\n    country\n  } = _ref;\n  const [weather, setWeather] = useState('');\n  useEffect(() => {\n    axios.get(`http://api.weatherstack.com/current?access_key=${process.env.REACT_APP_API_KEY}&query=${country.capital}`).then(response => {\n      setWeather(response.data.current);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Info, {\n      country: country\n    }, country.name.common, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Languages, {\n      languages: Object.values(country.languages)\n    }, country.name.common, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flags.png,\n      style: {\n        width: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"tempterature \", weather.temperature, \" Celsius\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weather.weather_icons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"wind \", weather.wind_speed, \" m/s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n_s(Country, \"gW7DJH5WpAMtzc/d+tTNiRPRzqI=\");\n_c = Country;\nconst Info = _ref2 => {\n  let {\n    country\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"area \", country.area]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Info;\nconst Languages = _ref3 => {\n  let {\n    languages\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: language\n      }, language, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n_c3 = Languages;\nexport default Country;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"Info\");\n$RefreshReg$(_c3, \"Languages\");","map":{"version":3,"names":["useState","useEffect","React","axios","Country","country","weather","setWeather","get","process","env","REACT_APP_API_KEY","capital","then","response","data","current","name","common","Object","values","languages","flags","png","width","temperature","weather_icons","wind_speed","Info","area","Languages","map","language"],"sources":["/home/katjaker/FullStack/osa2/countries/src/components/Country.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport React from 'react';\nimport axios from 'axios'\n\nconst Country = ({country}) => {\n\n    const [weather, setWeather] = useState('')\n  \n    useEffect(() => {\n      axios\n      .get(`http://api.weatherstack.com/current?access_key=${process.env.REACT_APP_API_KEY}&query=${country.capital}`)\n      .then(response => {\n        setWeather(response.data.current)\n      })\n    }, [])\n  \n    return (\n      <div>\n        <Info key={country.name.common} country={country}/>\n        <Languages key={country.name.common} languages={Object.values(country.languages)}/>\n        <img src={country.flags.png} style={{ width: '50%' }}></img>\n        <h3>Weather in {country.capital}</h3>\n        <p>tempterature {weather.temperature} Celsius</p>\n        <img src={weather.weather_icons}></img>\n        <p>wind {weather.wind_speed} m/s</p>\n      </div>\n    )\n  }\n\n  const Info = ({country}) => {\n    return (\n      <div>\n        <h2>{country.name.common}</h2>\n        <p>capital {country.capital}</p>\n        <p>area {country.area}</p>\n      </div>\n    )\n  }\n  \n  const Languages = ({languages}) => {\n    return (\n      <div>\n        <p><strong>languages:</strong></p>\n        <ul>\n          {languages.map(language =>\n            <li key={language}>\n              {language}\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n\n  export default Country;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,OAAO,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAO,CAAC;EAEtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdE,KAAK,CACJK,GAAG,CAAE,kDAAiDC,OAAO,CAACC,GAAG,CAACC,iBAAkB,UAASN,OAAO,CAACO,OAAQ,EAAC,CAAC,CAC/GC,IAAI,CAACC,QAAQ,IAAI;MAChBP,UAAU,CAACO,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE,QAAC,IAAI;MAA2B,OAAO,EAAEX;IAAQ,GAAtCA,OAAO,CAACY,IAAI,CAACC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAqB,eACnD,QAAC,SAAS;MAA2B,SAAS,EAAEC,MAAM,CAACC,MAAM,CAACf,OAAO,CAACgB,SAAS;IAAE,GAAjEhB,OAAO,CAACY,IAAI,CAACC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAgD,eACnF;MAAK,GAAG,EAAEb,OAAO,CAACiB,KAAK,CAACC,GAAI;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5D;MAAA,0BAAgBnB,OAAO,CAACO,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACrC;MAAA,4BAAiBN,OAAO,CAACmB,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACjD;MAAK,GAAG,EAAEnB,OAAO,CAACoB;IAAc;MAAA;MAAA;MAAA;IAAA,QAAO,eACvC;MAAA,oBAASpB,OAAO,CAACqB,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV,CAAC;AAAA,GAvBGvB,OAAO;AAAA,KAAPA,OAAO;AAyBX,MAAMwB,IAAI,GAAG,SAAe;EAAA,IAAd;IAACvB;EAAO,CAAC;EACrB,oBACE;IAAA,wBACE;MAAA,UAAKA,OAAO,CAACY,IAAI,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eAC9B;MAAA,uBAAYb,OAAO,CAACO,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAChC;MAAA,oBAASP,OAAO,CAACwB,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AAEV,CAAC;AAAA,MARKD,IAAI;AAUV,MAAME,SAAS,GAAG,SAAiB;EAAA,IAAhB;IAACT;EAAS,CAAC;EAC5B,oBACE;IAAA,wBACE;MAAA,uBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA2B;MAAA;MAAA;MAAA;IAAA,QAAI,eAClC;MAAA,UACGA,SAAS,CAACU,GAAG,CAACC,QAAQ,iBACrB;QAAA,UACGA;MAAQ,GADFA,QAAQ;QAAA;QAAA;QAAA;MAAA,QAEZ;IACN;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAA,MAbKF,SAAS;AAef,eAAe1B,OAAO;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}