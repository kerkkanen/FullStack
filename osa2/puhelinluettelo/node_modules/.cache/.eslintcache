[{"/home/katjaker/FullStack/osa2/puhelinluettelo/src/index.js":"1","/home/katjaker/FullStack/osa2/puhelinluettelo/src/App.js":"2","/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Filter.js":"3","/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Add.js":"4","/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Person.js":"5","/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Persons.js":"6","/home/katjaker/FullStack/osa2/puhelinluettelo/src/services/contacts.js":"7","/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Notification.js":"8"},{"size":181,"mtime":1668078435054,"results":"9","hashOfConfig":"10"},{"size":3614,"mtime":1668597672432,"results":"11","hashOfConfig":"10"},{"size":253,"mtime":1667981480241,"results":"12","hashOfConfig":"10"},{"size":508,"mtime":1667982299597,"results":"13","hashOfConfig":"10"},{"size":302,"mtime":1668074195360,"results":"14","hashOfConfig":"10"},{"size":312,"mtime":1668074016427,"results":"15","hashOfConfig":"10"},{"size":606,"mtime":1668685032865,"results":"16","hashOfConfig":"10"},{"size":256,"mtime":1668079700628,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t2q3wo",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/katjaker/FullStack/osa2/puhelinluettelo/src/index.js",[],[],"/home/katjaker/FullStack/osa2/puhelinluettelo/src/App.js",["45"],[],"import { useState, useEffect } from 'react'\nimport contactService from './services/contacts'\nimport Filter from './components/Filter'\nimport Add from './components/Add'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searched, setSearched] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  useEffect(() => {\n    contactService\n    .getAll()\n    .then(initialContacts => {\n      setPersons(initialContacts)\n    })\n  }, [])\n\n  const addNew = (event) => {\n    event.preventDefault()\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n    \n    if (persons.some((person) => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatablePerson = persons.find(p => p.name == newName)\n        const changedPerson = {...updatablePerson, number: newNumber}\n\n        contactService\n        .update(changedPerson.id, changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.name !== newName ? person : returnedPerson))\n          setSuccessMessage(`Updated ${newName}`)\n\n          setTimeout(() => {\n          setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Information of ${newName} has already been removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n            }, 5000)\n\n          setPersons(persons.filter(p => p.id !== updatablePerson.id))\n          setNewName('')\n          setNewNumber('')\n\n          return\n          \n        })        \n        \n      }\n      setNewName('')\n      setNewNumber('')\n\n      return\n      \n    }\n    contactService\n    .create(person)\n    .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n    setNewName('')\n    setNewNumber('')\n    })\n\n    setSuccessMessage(`Added ${newName}`)\n\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, 5000)\n\n    setPersons(persons.concat(person))\n    \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {    \n    setSearched(event.target.value)    \n    \n  }\n\n  const handleDelete = (id, name) => {    \n    if (window.confirm((`Delete ${name}?`))) {\n      contactService\n      .remove(id)\n\n      setErrorMessage(`Deleted ${name}`)\n\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n\n      setPersons(persons.filter(person => person.id !==id))\n\n    }\n\n    \n  }\n\n  const personsToShow = searched === '' ? persons : persons.filter((person) => person.name.toLocaleLowerCase().includes(searched.toLocaleLowerCase()));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} className=\"success\"/>\n      <Notification message={errorMessage} className=\"error\"/>\n      <Filter searched={searched} handleSearch={handleSearch}/>\n      \n      <h2>Add a new</h2>\n      <Add addNew={addNew} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n\n      <h2>Numbers</h2>\n        <Persons personsToShow={personsToShow} handleDelete={handleDelete}/>\n    </div>\n  )\n\n}\n\nexport default App","/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Filter.js",[],[],[],"/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Add.js",[],[],"/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Person.js",[],[],"/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Persons.js",[],[],"/home/katjaker/FullStack/osa2/puhelinluettelo/src/services/contacts.js",["46"],[],"import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const remove = id => {\n    axios.delete(`${baseUrl}/${id}`)\n    return\n\n  }\n  \n  export default {getAll, create, update, remove};","/home/katjaker/FullStack/osa2/puhelinluettelo/src/components/Notification.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":33,"column":58,"nodeType":"49","messageId":"50","endLine":33,"endColumn":60},{"ruleId":"51","severity":1,"message":"52","line":26,"column":3,"nodeType":"53","endLine":26,"endColumn":51},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]