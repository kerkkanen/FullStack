{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = null;\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    showNotification(state, action) {\n      return action.payload;\n    },\n\n    resetNotification(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  setVoteNotification,\n  setCreateNotification,\n  setNullNotification\n} = notificationSlice.actions;\nexport default notificationSlice.reducer;\nexport const setNotification = (message, time) => {\n  return async dispatch => {\n    dispatch(showeNotification(message));\n    setTimeout(() => {\n      dispatch(resetNotification(null));\n    }, time * 1000);\n  };\n};","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["createSlice","initialState","notificationSlice","name","reducers","showNotification","state","action","payload","resetNotification","setVoteNotification","setCreateNotification","setNullNotification","actions","reducer","setNotification","message","time","dispatch","showeNotification","setTimeout"],"mappings":"AACE,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,IAArB;AAEA,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAE,eAD8B;AAEpCF,EAAAA,YAFoC;AAGpCG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,gBAAgB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC9B,aAAOA,MAAM,CAACC,OAAd;AACD,KAHK;;AAKNC,IAAAA,iBAAiB,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC/B,aAAOA,MAAM,CAACC,OAAd;AACD;;AAPK;AAH0B,CAAD,CAArC;AAcA,OAAO,MAAM;AAAEE,EAAAA,mBAAF;AAAuBC,EAAAA,qBAAvB;AAA8CC,EAAAA;AAA9C,IAAsEV,iBAAiB,CAACW,OAA9F;AACP,eAAeX,iBAAiB,CAACY,OAAjC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAChD,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACC,iBAAiB,CAACH,OAAD,CAAlB,CAAR;AAEAI,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,QAAQ,CAACT,iBAAiB,CAAC,IAAD,CAAlB,CAAR;AACD,KAFS,EAEPQ,IAAI,GAAG,IAFA,CAAV;AAGD,GAND;AAQD,CATM","sourcesContent":["\n  import { createSlice } from '@reduxjs/toolkit'\n\n  const initialState = null\n  \n  const notificationSlice = createSlice({\n    name: 'notifications',\n    initialState,\n    reducers: {\n        showNotification(state, action) {\n          return action.payload\n        },\n\n        resetNotification(state, action) {\n          return action.payload\n        }\n    }\n  })\n  \n  export const { setVoteNotification, setCreateNotification, setNullNotification } = notificationSlice.actions\n  export default notificationSlice.reducer\n\n  export const setNotification = (message, time) => {\n    return async dispatch => {\n      dispatch(showeNotification(message))\n\n      setTimeout(() => {\n        dispatch(resetNotification(null))\n      }, time * 1000)\n    }\n\n  }"]},"metadata":{},"sourceType":"module"}