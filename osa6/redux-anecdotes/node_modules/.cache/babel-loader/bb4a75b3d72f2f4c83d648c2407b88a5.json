{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst initialState = [];\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState,\n  reducers: {\n    vote(state, action) {\n      const id = action.payload;\n      const anecdoteToChange = state.find(a => a.id === id);\n      const changedAnecdote = { ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      };\n      state.map(anecdote => anecdote.id !== id ? anecdote : changedAnecdote);\n    },\n\n    create(state, action) {\n      state.push({\n        content: action.payload.content,\n        id: getId(),\n        votes: 0\n      });\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  vote,\n  create,\n  appendAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport default anecdoteSlice.reducer;","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/reducers/anecdoteReducer.js"],"names":["createSlice","getId","Math","random","toFixed","initialState","anecdoteSlice","name","reducers","vote","state","action","id","payload","anecdoteToChange","find","a","changedAnecdote","votes","map","anecdote","create","push","content","appendAnecdote","setAnecdotes","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,KAAK,GAAG,MAAM,CAAC,SAASC,IAAI,CAACC,MAAL,EAAV,EAAyBC,OAAzB,CAAiC,CAAjC,CAApB;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,aAAa,GAAGN,WAAW,CAAC;AAChCO,EAAAA,IAAI,EAAE,WAD0B;AAEhCF,EAAAA,YAFgC;AAGhCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,YAAMC,EAAE,GAAGD,MAAM,CAACE,OAAlB;AACA,YAAMC,gBAAgB,GAAGJ,KAAK,CAACK,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASA,EAAzB,CAAzB;AACA,YAAMK,eAAe,GAAG,EACtB,GAAGH,gBADmB;AAEtBI,QAAAA,KAAK,EAAEJ,gBAAgB,CAACI,KAAjB,GAAyB;AAFV,OAAxB;AAIAR,MAAAA,KAAK,CAACS,GAAN,CAAUC,QAAQ,IAChBA,QAAQ,CAACR,EAAT,KAAgBA,EAAhB,GAAqBQ,QAArB,GAAgCH,eADlC;AAGD,KAXO;;AAaRI,IAAAA,MAAM,CAACX,KAAD,EAAQC,MAAR,EAAgB;AACpBD,MAAAA,KAAK,CAACY,IAAN,CAAW;AACTC,QAAAA,OAAO,EAAEZ,MAAM,CAACE,OAAP,CAAeU,OADf;AAETX,QAAAA,EAAE,EAAEX,KAAK,EAFA;AAGTiB,QAAAA,KAAK,EAAE;AAHE,OAAX;AAKD,KAnBO;;AAqBRM,IAAAA,cAAc,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACY,IAAN,CAAWX,MAAM,CAACE,OAAlB;AACD,KAvBO;;AAyBRY,IAAAA,YAAY,CAACf,KAAD,EAAQC,MAAR,EAAgB;AAC1B,aAAOA,MAAM,CAACE,OAAd;AACD;;AA3BO;AAHsB,CAAD,CAAjC;AAkCA,OAAO,MAAM;AAAEJ,EAAAA,IAAF;AAAQY,EAAAA,MAAR;AAAgBG,EAAAA,cAAhB;AAAgCC,EAAAA;AAAhC,IAAiDnB,aAAa,CAACoB,OAArE;AAEP,eAAepB,aAAa,CAACqB,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst getId = () => (100000 * Math.random()).toFixed(0)\n\nconst initialState = []\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState,\n  reducers: {\n    vote(state, action) {\n      const id = action.payload\n      const anecdoteToChange = state.find(a => a.id === id)\n      const changedAnecdote = {\n        ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      }\n      state.map(anecdote =>\n        anecdote.id !== id ? anecdote : changedAnecdote\n      )      \n    },\n\n    create(state, action) {\n      state.push({\n        content: action.payload.content,\n        id: getId(),\n        votes: 0\n      })\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload)\n    },\n    \n    setAnecdotes(state, action) {\n      return action.payload\n    }\n  }\n})\n\nexport const { vote, create, appendAnecdote, setAnecdotes } = anecdoteSlice.actions\n\nexport default anecdoteSlice.reducer"]},"metadata":{},"sourceType":"module"}