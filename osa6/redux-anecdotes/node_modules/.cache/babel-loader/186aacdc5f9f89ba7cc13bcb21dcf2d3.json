{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = null;\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    setVoteNotification(state, action) {\n      const anecdote = action.payload.anecdote;\n      const message = action.payload.message;\n      return { ...state,\n        anecdote,\n        message\n      };\n    },\n\n    setCreateNotification(state, action) {\n      const anecdote = action.payload;\n      return `created ${anecdote}`;\n    },\n\n    setNullNotification(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  setVoteNotification,\n  setCreateNotification,\n  setNullNotification\n} = notificationSlice.actions;\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["createSlice","initialState","notificationSlice","name","reducers","setVoteNotification","state","action","anecdote","payload","message","setCreateNotification","setNullNotification","actions","reducer"],"mappings":"AACE,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,IAArB;AAEA,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAE,eAD8B;AAEpCF,EAAAA,YAFoC;AAGpCG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,mBAAmB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACjC,YAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAP,CAAeD,QAAhC;AACA,YAAME,OAAO,GAAGH,MAAM,CAACE,OAAP,CAAeC,OAA/B;AACA,aAAO,EAAC,GAAGJ,KAAJ;AAAWE,QAAAA,QAAX;AAAqBE,QAAAA;AAArB,OAAP;AACD,KALK;;AAMNC,IAAAA,qBAAqB,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACnC,YAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAxB;AACA,aAAS,WAAUD,QAAS,EAA5B;AACD,KATK;;AAUNI,IAAAA,mBAAmB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACjC,aAAOA,MAAM,CAACE,OAAd;AACD;;AAZK;AAH0B,CAAD,CAArC;AAmBA,OAAO,MAAM;AAAEJ,EAAAA,mBAAF;AAAuBM,EAAAA,qBAAvB;AAA8CC,EAAAA;AAA9C,IAAsEV,iBAAiB,CAACW,OAA9F;AACP,eAAeX,iBAAiB,CAACY,OAAjC","sourcesContent":["\n  import { createSlice } from '@reduxjs/toolkit'\n\n  const initialState = null\n  \n  const notificationSlice = createSlice({\n    name: 'notifications',\n    initialState,\n    reducers: {\n        setVoteNotification(state, action) {\n          const anecdote = action.payload.anecdote\n          const message = action.payload.message\n          return {...state, anecdote, message }\n        },\n        setCreateNotification(state, action) {\n          const anecdote = action.payload\n          return (`created ${anecdote}`)\n        },\n        setNullNotification(state, action) {\n          return action.payload\n        }\n    }\n  })\n  \n  export const { setVoteNotification, setCreateNotification, setNullNotification } = notificationSlice.actions\n  export default notificationSlice.reducer"]},"metadata":{},"sourceType":"module"}