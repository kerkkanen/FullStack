{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = '';\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    showAll(state, action) {\n      const anecdotes = action.payload.anecdotes;\n      const searched = action.payload.content;\n      const anecdotesToShow = searched === '' ? anecdotes : anecdotes.filter(anecdote => anecdote.content.toLocaleLowerCase().includes(searched.toLocaleLowerCase()));\n      return action.payload;\n    },\n\n    filter(state) {\n      return '';\n    }\n\n  }\n});\nexport const {\n  showAll,\n  filter\n} = filterSlice.actions;\nexport default filterSlice.reducer;","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/reducers/filterReducer.js"],"names":["createSlice","initialState","filterSlice","name","reducers","showAll","state","action","anecdotes","payload","searched","content","anecdotesToShow","filter","anecdote","toLocaleLowerCase","includes","actions","reducer"],"mappings":"AACE,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,WAAW,GAAGF,WAAW,CAAC;AAC9BG,EAAAA,IAAI,EAAE,QADwB;AAE9BF,EAAAA,YAF8B;AAG9BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnB,YAAMC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAeD,SAAjC;AACA,YAAME,QAAQ,GAAGH,MAAM,CAACE,OAAP,CAAeE,OAAhC;AACA,YAAMC,eAAe,GAAGF,QAAQ,KAAK,EAAb,GAClBF,SADkB,GAElBA,SAAS,CACNK,MADH,CACWC,QAAD,IAAcA,QAAQ,CAACH,OAAT,CACjBI,iBADiB,GAEjBC,QAFiB,CAERN,QAAQ,CACbK,iBADK,EAFQ,CADxB,CAFN;AAOA,aAAOR,MAAM,CAACE,OAAd;AACH,KAZK;;AAcNI,IAAAA,MAAM,CAACP,KAAD,EAAQ;AACV,aAAO,EAAP;AACH;;AAhBK;AAHoB,CAAD,CAA/B;AAuBA,OAAO,MAAM;AAAED,EAAAA,OAAF;AAAWQ,EAAAA;AAAX,IAAsBX,WAAW,CAACe,OAAxC;AACP,eAAef,WAAW,CAACgB,OAA3B","sourcesContent":["\n  import { createSlice } from '@reduxjs/toolkit'\n\n  const initialState = ''\n  \n  const filterSlice = createSlice({\n    name: 'filter',\n    initialState,\n    reducers: {\n        showAll(state, action) {\n            const anecdotes = action.payload.anecdotes\n            const searched = action.payload.content\n            const anecdotesToShow = searched === ''\n                ? anecdotes\n                : anecdotes\n                    .filter((anecdote) => anecdote.content\n                        .toLocaleLowerCase()\n                        .includes(searched\n                            .toLocaleLowerCase()));\n            return action.payload\n        },\n        \n        filter(state) {\n            return ''\n        }\n    }\n  })\n  \n  export const { showAll, filter } = filterSlice.actions\n  export default filterSlice.reducer"]},"metadata":{},"sourceType":"module"}