{"ast":null,"code":"var _jsxFileName = \"/home/katjaker/FullStack/osa6/redux-anecdotes/src/components/AnecdoteList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { voteAnecdote } from '../reducers/anecdoteReducer';\nimport { setNotification } from '../reducers/notificationReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnecdoteList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let anecdotes = useSelector(state => state.anecdotes);\n  const filter = useSelector(state => state.filter);\n  anecdotes = anecdotes.filter(a => {\n    const filtered = a.content.toLowerCase().includes(filter.toLowerCase());\n\n    if (filtered) {\n      return a;\n    }\n  });\n\n  const voteAction = anecdote => {\n    dispatch(voteAnecdote(anecdote));\n    dispatch(setNotification(`you voted ${anecdote.content}`, 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: anecdotes.sort((a, b) => b.votes - a.votes).map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => voteAction(anecdote),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AnecdoteList, \"SOaQujX8EXSsQS9cIbGnLiQo+RQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AnecdoteList;\nexport default AnecdoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnecdoteList\");","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/components/AnecdoteList.js"],"names":["useSelector","useDispatch","voteAnecdote","setNotification","AnecdoteList","dispatch","anecdotes","state","filter","a","filtered","content","toLowerCase","includes","voteAction","anecdote","sort","b","votes","map","id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,eAAT,QAAgC,iCAAhC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAIK,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA3B;AACA,QAAME,MAAM,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA1B;AAEAF,EAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBC,CAAC,IAAI;AAChC,UAAMC,QAAQ,GAAGD,CAAC,CAACE,OAAF,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCL,MAAM,CAACI,WAAP,EAAjC,CAAjB;;AACA,QAAIF,QAAJ,EAAc;AACZ,aAAOD,CAAP;AACD;AACF,GALW,CAAZ;;AAOA,QAAMK,UAAU,GAAIC,QAAD,IAAc;AAC7BV,IAAAA,QAAQ,CAACH,YAAY,CAACa,QAAD,CAAb,CAAR;AACAV,IAAAA,QAAQ,CAACF,eAAe,CAAE,aAAYY,QAAQ,CAACJ,OAAQ,EAA/B,EAAkC,CAAlC,CAAhB,CAAR;AACH,GAHD;;AAKA,sBACE;AAAA,cACCL,SAAS,CAACU,IAAV,CAAe,CAACP,CAAD,EAAIQ,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUT,CAAC,CAACS,KAArC,EAA4CC,GAA5C,CAAgDJ,QAAQ,iBACvD;AAAA,8BACE;AAAA,kBACGA,QAAQ,CAACJ;AADZ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,2BACOI,QAAQ,CAACG,KADhB,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMJ,UAAU,CAACC,QAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAUA,QAAQ,CAACK,EAAnB;AAAA;AAAA;AAAA;AAAA,YADD;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAeH,CAhCD;;GAAMhB,Y;UACeH,W,EACDD,W,EACDA,W;;;KAHbI,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport { voteAnecdote } from '../reducers/anecdoteReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst AnecdoteList = () => {\n    const dispatch = useDispatch()\n    let anecdotes = useSelector(state => state.anecdotes)\n    const filter = useSelector(state => state.filter)\n\n    anecdotes = anecdotes.filter(a => {\n      const filtered = a.content.toLowerCase().includes(filter.toLowerCase())\n      if (filtered) {\n        return a\n      }\n    })\n\n    const voteAction = (anecdote) => {\n        dispatch(voteAnecdote(anecdote))\n        dispatch(setNotification(`you voted ${anecdote.content}`, 1))\n    }\n\n    return (\n      <div>\n      {anecdotes.sort((a, b) => b.votes - a.votes).map(anecdote =>\n        <div key={anecdote.id}>\n          <div>\n            {anecdote.content}\n          </div>\n          <div>\n            has {anecdote.votes}\n            <button onClick={() => voteAction(anecdote)}>vote</button>\n          </div>\n        </div>\n      )}\n      </div>\n      )\n}\n\nexport default AnecdoteList\n"]},"metadata":{},"sourceType":"module"}