{"ast":null,"code":"const initialState = '';\n\nconst notificationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'VOTE':\n      const id = action.data.id;\n      const anecdoteToChange = state.find(a => a.id === id);\n      const changedAnecdote = { ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      };\n      return state.map(anecdote => anecdote.id !== id ? anecdote : changedAnecdote);\n\n    case 'CREATE':\n      const anecdote = {\n        content: action.data.content,\n        id: getId(),\n        votes: 0\n      };\n      return state.concat(anecdote);\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["initialState","notificationReducer","state","action","type","id","data","anecdoteToChange","find","a","changedAnecdote","votes","map","anecdote","content","getId","concat"],"mappings":"AAEE,MAAMA,YAAY,GAAG,EAArB;;AAEA,MAAMC,mBAAmB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,YAAMC,EAAE,GAAGF,MAAM,CAACG,IAAP,CAAYD,EAAvB;AACA,YAAME,gBAAgB,GAAGL,KAAK,CAACM,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASA,EAAzB,CAAzB;AACA,YAAMK,eAAe,GAAG,EACtB,GAAGH,gBADmB;AAEtBI,QAAAA,KAAK,EAAEJ,gBAAgB,CAACI,KAAjB,GAAyB;AAFV,OAAxB;AAIA,aAAOT,KAAK,CAACU,GAAN,CAAUC,QAAQ,IACvBA,QAAQ,CAACR,EAAT,KAAgBA,EAAhB,GAAqBQ,QAArB,GAAgCH,eAD3B,CAAP;;AAGF,SAAK,QAAL;AACE,YAAMG,QAAQ,GAAG;AACfC,QAAAA,OAAO,EAAEX,MAAM,CAACG,IAAP,CAAYQ,OADN;AAEfT,QAAAA,EAAE,EAAEU,KAAK,EAFM;AAGfJ,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKA,aAAOT,KAAK,CAACc,MAAN,CAAaH,QAAb,CAAP;;AACF;AAAS,aAAOX,KAAP;AAlBX;AAoBD,CArBD;;AAuBA,eAAeD,mBAAf","sourcesContent":["\n  \n  const initialState = ''\n  \n  const notificationReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'VOTE':\n        const id = action.data.id\n        const anecdoteToChange = state.find(a => a.id === id)\n        const changedAnecdote = {\n          ...anecdoteToChange,\n          votes: anecdoteToChange.votes + 1\n        }\n        return state.map(anecdote =>\n          anecdote.id !== id ? anecdote : changedAnecdote\n        )\n      case 'CREATE':\n        const anecdote = {\n          content: action.data.content,\n          id: getId(),\n          votes: 0\n        }\n        return state.concat(anecdote)\n      default: return state\n    }\n  }\n  \n  export default notificationReducer"]},"metadata":{},"sourceType":"module"}