{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport anecdoteService from '../services/anecdotes';\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  vote,\n  create,\n  appendAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch(setAnecdotes(anecdotes));\n  };\n};\nexport const createAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch(appendAnecdote(newAnecdote));\n  };\n};\nexport const voteAnecdote = anecdoteObject => {\n  return async dispatch => {\n    const votes = anecdoteObject.votes + 1;\n    const updatableAnecdote = { ...anecdoteObject,\n      votes\n    };\n    await anecdoteService.update(anecdoteObject.id, updatableAnecdote);\n    const anecdotes = await anecdoteService.getAll();\n    dispatch(setAnecdotes(anecdotes));\n  };\n};\nexport default anecdoteSlice.reducer;","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/reducers/anecdoteReducer.js"],"names":["createSlice","anecdoteService","anecdoteSlice","name","initialState","reducers","appendAnecdote","state","action","push","payload","setAnecdotes","vote","create","actions","initializeAnecdotes","dispatch","anecdotes","getAll","createAnecdote","content","newAnecdote","createNew","voteAnecdote","anecdoteObject","votes","updatableAnecdote","update","id","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAEA,MAAMC,aAAa,GAAGF,WAAW,CAAC;AAChCG,EAAAA,IAAI,EAAE,WAD0B;AAEhCC,EAAAA,YAAY,EAAE,EAFkB;AAGhCC,EAAAA,QAAQ,EAAE;AAERC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,KAJO;;AAMRC,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC1B,aAAOA,MAAM,CAACE,OAAd;AACD;;AARO;AAHsB,CAAD,CAAjC;AAeA,OAAO,MAAM;AAAEE,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBP,EAAAA,cAAhB;AAAgCK,EAAAA;AAAhC,IAAiDT,aAAa,CAACY,OAArE;AAEP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,SAAS,GAAG,MAAMhB,eAAe,CAACiB,MAAhB,EAAxB;AACAF,IAAAA,QAAQ,CAACL,YAAY,CAACM,SAAD,CAAb,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAME,cAAc,GAAGC,OAAO,IAAI;AACvC,SAAO,MAAMJ,QAAN,IAAkB;AACvB,UAAMK,WAAW,GAAG,MAAMpB,eAAe,CAACqB,SAAhB,CAA0BF,OAA1B,CAA1B;AACAJ,IAAAA,QAAQ,CAACV,cAAc,CAACe,WAAD,CAAf,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAGC,cAAc,IAAI;AAC5C,SAAO,MAAMR,QAAN,IAAkB;AACvB,UAAMS,KAAK,GAAGD,cAAc,CAACC,KAAf,GAAuB,CAArC;AACA,UAAMC,iBAAiB,GAAG,EAAC,GAAGF,cAAJ;AAAoBC,MAAAA;AAApB,KAA1B;AACA,UAAMxB,eAAe,CAAC0B,MAAhB,CAAuBH,cAAc,CAACI,EAAtC,EAA0CF,iBAA1C,CAAN;AACA,UAAMT,SAAS,GAAG,MAAMhB,eAAe,CAACiB,MAAhB,EAAxB;AACAF,IAAAA,QAAQ,CAACL,YAAY,CAACM,SAAD,CAAb,CAAR;AACD,GAND;AAOD,CARM;AAUP,eAAef,aAAa,CAAC2B,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport anecdoteService from '../services/anecdotes'\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    \n    appendAnecdote(state, action) {\n      state.push(action.payload)\n    },\n    \n    setAnecdotes(state, action) {\n      return action.payload\n    }\n  }\n})\n\nexport const { vote, create, appendAnecdote, setAnecdotes } = anecdoteSlice.actions\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll()\n    dispatch(setAnecdotes(anecdotes))\n  }\n}\n\nexport const createAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content)\n    dispatch(appendAnecdote(newAnecdote))\n  }\n}\n\nexport const voteAnecdote = anecdoteObject => {\n  return async dispatch => {\n    const votes = anecdoteObject.votes + 1\n    const updatableAnecdote = {...anecdoteObject, votes}\n    await anecdoteService.update(anecdoteObject.id, updatableAnecdote)    \n    const anecdotes = await anecdoteService.getAll()\n    dispatch(setAnecdotes(anecdotes))\n  }\n}\n\nexport default anecdoteSlice.reducer\n"]},"metadata":{},"sourceType":"module"}