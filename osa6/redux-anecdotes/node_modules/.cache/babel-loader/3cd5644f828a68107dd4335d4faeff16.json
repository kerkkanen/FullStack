{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = '';\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    showWithFilter(state, action) {\n      const searched = action.payload.searched;\n      const anecdotes = action.payload.anecdotes;\n      const anecdotesToShow = searched === '' ? anecdotes : anecdotes.filter(anecdote => anecdote.content.toLocaleLowerCase().includes(searched.toLocaleLowerCase()));\n      const returnableAnecdotes = state.anecdotes = anecdotesToShow;\n      return returnableAnecdotes;\n    },\n\n    otherFilter(state) {\n      return '';\n    }\n\n  }\n});\nexport const {\n  showWithFilter,\n  otherFilter\n} = filterSlice.actions;\nexport default filterSlice.reducer;","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/reducers/filterReducer.js"],"names":["createSlice","initialState","filterSlice","name","reducers","showWithFilter","state","action","searched","payload","anecdotes","anecdotesToShow","filter","anecdote","content","toLocaleLowerCase","includes","returnableAnecdotes","otherFilter","actions","reducer"],"mappings":"AACE,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,WAAW,GAAGF,WAAW,CAAC;AAC9BG,EAAAA,IAAI,EAAE,QADwB;AAE9BF,EAAAA,YAF8B;AAG9BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAE1B,YAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAP,CAAeD,QAAhC;AACA,YAAME,SAAS,GAAGH,MAAM,CAACE,OAAP,CAAeC,SAAjC;AAEA,YAAMC,eAAe,GAAGH,QAAQ,KAAK,EAAb,GAAkBE,SAAlB,GAA8BA,SAAS,CAACE,MAAV,CAAkBC,QAAD,IAAcA,QAAQ,CAACC,OAAT,CAAiBC,iBAAjB,GAAqCC,QAArC,CAA8CR,QAAQ,CAACO,iBAAT,EAA9C,CAA/B,CAAtD;AAGA,YAAME,mBAAmB,GAAGX,KAAK,CAACI,SAAN,GAAkBC,eAA9C;AACA,aAAOM,mBAAP;AACH,KAXK;;AAaNC,IAAAA,WAAW,CAACZ,KAAD,EAAQ;AACf,aAAO,EAAP;AACH;;AAfK;AAHoB,CAAD,CAA/B;AAsBA,OAAO,MAAM;AAAED,EAAAA,cAAF;AAAkBa,EAAAA;AAAlB,IAAkChB,WAAW,CAACiB,OAApD;AACP,eAAejB,WAAW,CAACkB,OAA3B","sourcesContent":["\n  import { createSlice } from '@reduxjs/toolkit'\n\n  const initialState = ''\n  \n  const filterSlice = createSlice({\n    name: 'filter',\n    initialState,\n    reducers: {\n        showWithFilter(state, action) {\n            \n            const searched = action.payload.searched\n            const anecdotes = action.payload.anecdotes\n\n            const anecdotesToShow = searched === '' ? anecdotes : anecdotes.filter((anecdote) => anecdote.content.toLocaleLowerCase().includes(searched.toLocaleLowerCase()));\n        \n\n            const returnableAnecdotes = state.anecdotes = anecdotesToShow\n            return returnableAnecdotes\n        },\n        \n        otherFilter(state) {\n            return ''\n        }\n    }\n  })\n  \n  export const { showWithFilter, otherFilter } = filterSlice.actions\n  export default filterSlice.reducer\n\n"]},"metadata":{},"sourceType":"module"}