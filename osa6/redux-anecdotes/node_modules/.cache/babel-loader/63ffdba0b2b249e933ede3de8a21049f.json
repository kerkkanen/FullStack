{"ast":null,"code":"var _jsxFileName = \"/home/katjaker/FullStack/osa6/redux-anecdotes/src/components/AnecdoteList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { voteAnecdote } from '../reducers/anecdoteReducer';\nimport { setNotification } from '../reducers/notificationReducer';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnecdoteList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  let anecdotesToShow = props.anecdotes;\n  anecdotesToShow = anecdotesToShow.props.filter(a => {\n    const filtered = a.content.toLowerCase().includes(props.filter.toLowerCase());\n\n    if (filtered) {\n      return a;\n    }\n  });\n\n  const voteAction = anecdote => {\n    dispatch(voteAnecdote(anecdote));\n    dispatch(setNotification(`you voted ${anecdote.content}`, 2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: anecdotesToShow.sort((a, b) => b.votes - a.votes).map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => voteAction(anecdote),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AnecdoteList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AnecdoteList;\n\nconst mapStateToProps = state => {\n  return {\n    anecdotes: state.anecdotes,\n    filter: state.filter\n  };\n};\n\nconst ConnectedAnecdoteList = connect(mapStateToProps)(AnecdoteList);\nexport default ConnectedAnecdoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnecdoteList\");","map":{"version":3,"sources":["/home/katjaker/FullStack/osa6/redux-anecdotes/src/components/AnecdoteList.js"],"names":["useSelector","useDispatch","voteAnecdote","setNotification","connect","AnecdoteList","props","dispatch","anecdotesToShow","anecdotes","filter","a","filtered","content","toLowerCase","includes","voteAction","anecdote","sort","b","votes","map","id","mapStateToProps","state","ConnectedAnecdoteList"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAIO,eAAe,GAAGF,KAAK,CAACG,SAA5B;AAEAD,EAAAA,eAAe,GAAGA,eAAe,CAACF,KAAhB,CAAsBI,MAAtB,CAA6BC,CAAC,IAAI;AAClD,UAAMC,QAAQ,GAAGD,CAAC,CAACE,OAAF,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCT,KAAK,CAACI,MAAN,CAAaI,WAAb,EAAjC,CAAjB;;AACA,QAAIF,QAAJ,EAAc;AACZ,aAAOD,CAAP;AACD;AACF,GALiB,CAAlB;;AAOA,QAAMK,UAAU,GAAIC,QAAD,IAAc;AAC7BV,IAAAA,QAAQ,CAACL,YAAY,CAACe,QAAD,CAAb,CAAR;AACAV,IAAAA,QAAQ,CAACJ,eAAe,CAAE,aAAYc,QAAQ,CAACJ,OAAQ,EAA/B,EAAkC,CAAlC,CAAhB,CAAR;AACH,GAHD;;AAKA,sBACE;AAAA,cACCL,eAAe,CAACU,IAAhB,CAAqB,CAACP,CAAD,EAAIQ,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUT,CAAC,CAACS,KAA3C,EAAkDC,GAAlD,CAAsDJ,QAAQ,iBAC7D;AAAA,8BACE;AAAA,kBACGA,QAAQ,CAACJ;AADZ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,2BACOI,QAAQ,CAACG,KADhB,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMJ,UAAU,CAACC,QAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAUA,QAAQ,CAACK,EAAnB;AAAA;AAAA;AAAA;AAAA,YADD;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAeH,CA/BD;;GAAMjB,Y;UACeJ,W;;;KADfI,Y;;AAiCN,MAAMkB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLf,IAAAA,SAAS,EAAEe,KAAK,CAACf,SADZ;AAELC,IAAAA,MAAM,EAAEc,KAAK,CAACd;AAFT,GAAP;AAID,CALD;;AAOA,MAAMe,qBAAqB,GAAGrB,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,YAAzB,CAA9B;AAEA,eAAeoB,qBAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport { voteAnecdote } from '../reducers/anecdoteReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { connect } from 'react-redux'\n\nconst AnecdoteList = (props) => {\n    const dispatch = useDispatch()\n    let anecdotesToShow = props.anecdotes\n\n    anecdotesToShow = anecdotesToShow.props.filter(a => {\n      const filtered = a.content.toLowerCase().includes(props.filter.toLowerCase())\n      if (filtered) {\n        return a\n      }\n    })\n\n    const voteAction = (anecdote) => {\n        dispatch(voteAnecdote(anecdote))\n        dispatch(setNotification(`you voted ${anecdote.content}`, 2))\n    }\n\n    return (\n      <div>\n      {anecdotesToShow.sort((a, b) => b.votes - a.votes).map(anecdote =>\n        <div key={anecdote.id}>\n          <div>\n            {anecdote.content}\n          </div>\n          <div>\n            has {anecdote.votes}\n            <button onClick={() => voteAction(anecdote)}>vote</button>\n          </div>\n        </div>\n      )}\n      </div>\n      )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    anecdotes: state.anecdotes,\n    filter: state.filter\n  }\n}\n\nconst ConnectedAnecdoteList = connect(mapStateToProps)(AnecdoteList)\n\nexport default ConnectedAnecdoteList\n"]},"metadata":{},"sourceType":"module"}